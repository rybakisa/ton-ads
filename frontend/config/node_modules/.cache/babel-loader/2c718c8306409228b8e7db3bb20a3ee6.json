{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\n\nvar QueueAction = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(QueueAction, _super);\n\n  function QueueAction(scheduler, work) {\n    var _this = _super.call(this, scheduler, work) || this;\n\n    _this.scheduler = scheduler;\n    _this.work = work;\n    return _this;\n  }\n\n  QueueAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay > 0) {\n      return _super.prototype.schedule.call(this, state, delay);\n    }\n\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  };\n\n  QueueAction.prototype.execute = function (state, delay) {\n    return delay > 0 || this.closed ? _super.prototype.execute.call(this, state, delay) : this._execute(state, delay);\n  };\n\n  QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {\n      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n    }\n\n    return scheduler.flush(this);\n  };\n\n  return QueueAction;\n}(AsyncAction);\n\nexport { QueueAction };","map":{"version":3,"mappings":";AAAA,OAAO,KAAEA,OAAT,MAAsB,OAAtB;AAUA;;IAAoCC,qCAAcC,MAAd,EAAc;EAEhDF,+BAA+CE,MAA/C;;WAAAD,YAEEE,iBAAM;IAFc,8BAAyBA,SAAzB,EAAyBC,IAAzB,KAAyB,IAAzB;;IACAC,kBAAmDF,SAAnD;;IAErB;EAEM;;aAAoB,gCAAiBG,KAAjB,EAAiBC,KAAjB,EAAiB;IAC1C,IAAIA,KAAK,KAAI,KAAE,CAAf,EAAe;MACbA,QAAO,CAAP;IACD;;IACD,IAAIA,KAAC,GAAK,CAAV,EAAa;MACT,OAAML,MAAG,CAAKM,SAAR,CAASC,QAAT,CAASC,IAAT,CAAS,IAAT,EAASJ,KAAT,EAASC,KAAT,CAAN;IACJ;;IACA,aAAYA,KAAZ;IACD;IAEM;IACL,OAAO,IAAP;;;aAEE,CAAIC,UAAUG,UAAO,UAAQL,KAAR,EAAQC,KAAR,EAAQ;IAChC,kCAESL,8BAAc,IAAd,EAAVI,KAAU,EAAeC,KAAf,CAFT,GAE6D,2BAF7D;;;aAOG,WAAOK,iBAAM,UAAcT,SAAd,EAAeU,EAAf,EAAeN,KAAf,EAA4B;QAC1CA;MAEDA,KAAO,IAAP;IACD;;IACH,cAAC,IAAD,IAACA,SAAD,IAACA,gCAAD,EAAC;MAjCmC,OAiCnCL,gEAjCmC;;;;;;;CAAA","names":["tslib_1","QueueAction","_super","scheduler","work","_this","state","delay","prototype","schedule","call","execute","requestAsyncId","id"],"sources":["/home/rybakisa/Desktop/TEMP/HackaTON/TON Ads/ton-ads/node_modules/rxjs/src/internal/scheduler/QueueAction.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}