{"ast":null,"code":"const {\n  Cell\n} = require(\"../../boc\");\n\nconst {\n  Contract\n} = require(\"../index.js\");\n\nconst {\n  Address,\n  bytesToHex,\n  BN\n} = require(\"../../utils\");\n\nconst {\n  WalletContract\n} = require(\"./WalletContract\");\n\nclass WalletV4ContractR1 extends WalletContract {\n  /**\n   * @param provider    {HttpProvider}\n   * @param options {any}\n   */\n  constructor(provider, options) {\n    options.code = Cell.oneFromBocn    super(provider, options);\n    if (!this.options.walletId) this.options.walletId = 698983191 + this.options.wc;\n    this.methods.getPublicKey = this.getPublicKey.bind(this);\n  }\n\n  getName() {\n    return 'v4R1';\n  }\n  /**\n   * @override\n   * @private\n   * @param   seqno?   {number}\n   * @param   withoutOp? {boolean}\n   * @return {Cell}\n   */\n\n\n  createSigningMessage(seqno, withoutOp) {\n    seqno = seqno || 0;\n    const message = new Cell();\n    message.bits.writeUint(this.options.walletId, 32);\n\n    if (seqno === 0) {\n      // message.bits.writeInt(-1, 32);// todo: dont work\n      for (let i = 0; i < 32; i++) {\n        message.bits.writeBit(1);\n      }\n    } else {\n      const date = new Date();\n      const timestamp = Math.floor(date.getTime() / 1e3);\n      message.bits.writeUint(timestamp + 60, 32);\n    }\n\n    message.bits.writeUint(seqno, 32);\n\n    if (!withoutOp) {\n      message.bits.writeUint(0, 8); // op\n    }\n\n    return message;\n  }\n  /**\n   * @override\n   * @return {Cell} cell contains wallet data\n   */\n\n\n  createDataCell() {\n    const cell = new Cell();\n    cell.bits.writeUint(0, 32);\n    cell.bits.writeUint(this.options.walletId, 32);\n    cell.bits.writeBytes(this.options.publicKey);\n    cell.bits.writeUint(0, 1); // plugins dict empty\n\n    return cell;\n  }\n  /**\n   * @return {Promise<BN>}\n   */\n\n\n  async getPublicKey() {\n    const myAddress = await this.getAddress();\n    return this.provider.call2(myAddress.toString(), 'get_public_key');\n  }\n\n}\n\nmodule.exports = {\n  WalletV4ContractR1\n};","map":{"version":3,"names":["Cell","require","Contract","Address","bytesToHex","BN","WalletContract","WalletV4ContractR1","constructor","provider","options","code","oneFromBoc","walletId","wc","methods","getPublicKey","bind","getName","createSigningMessage","seqno","withoutOp","message","bits","writeUint","i","writeBit","date","Date","timestamp","Math","floor","getTime","createDataCell","cell","writeBytes","publicKey","myAddress","getAddress","call2","toString","module","exports"],"sources":["/home/rybakisa/Desktop/TEMP/HackaTON/TON Ads/ton-ads/node_modules/tonweb/src/contract/wallet/WalletContractV4.js"],"sourcesContent":["const {Cell} = require(\"../../boc\");\nconst {Contract} = require(\"../index.js\");\nconst {Address, bytesToHex, BN} = require(\"../../utils\");\nconst {WalletContract} = require(\"./WalletContract\");\n\nclass WalletV4ContractR1 extends WalletContract {\n\n    /**\n     * @param provider    {HttpProvider}\n     * @param options {any}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBocn        super(provider, options);\n        if (!this.options.walletId) this.options.walletId = 698983191 + this.options.wc;\n\n        this.methods.getPublicKey = this.getPublicKey.bind(this);\n    }\n\n    getName() {\n        return 'v4R1';\n    }\n\n    /**\n     * @override\n     * @private\n     * @param   seqno?   {number}\n     * @param   withoutOp? {boolean}\n     * @return {Cell}\n     */\n    createSigningMessage(seqno, withoutOp) {\n        seqno = seqno || 0;\n        const message = new Cell();\n        message.bits.writeUint(this.options.walletId, 32);\n        if (seqno === 0) {\n            // message.bits.writeInt(-1, 32);// todo: dont work\n            for (let i = 0; i < 32; i++) {\n                message.bits.writeBit(1);\n            }\n        } else {\n            const date = new Date();\n            const timestamp = Math.floor(date.getTime() / 1e3);\n            message.bits.writeUint(timestamp + 60, 32);\n        }\n        message.bits.writeUint(seqno, 32);\n        if (!withoutOp) {\n            message.bits.writeUint(0, 8); // op\n        }\n        return message;\n    }\n\n    /**\n     * @override\n     * @return {Cell} cell contains wallet data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeUint(0, 32);\n        cell.bits.writeUint(this.options.walletId, 32);\n        cell.bits.writeBytes(this.options.publicKey);\n        cell.bits.writeUint(0, 1); // plugins dict empty\n        return cell;\n    }\n\n    /**\n     * @return {Promise<BN>}\n     */\n    async getPublicKey() {\n        const myAddress = await this.getAddress();\n        return this.provider.call2(myAddress.toString(), 'get_public_key');\n    }\n}\n\nmodule.exports = {WalletV4ContractR1};\n"],"mappings":"AAAA,MAAM;EAACA;AAAD,IAASC,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAM;EAACC;AAAD,IAAaD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAM;EAACE,OAAD;EAAUC,UAAV;EAAsBC;AAAtB,IAA4BJ,OAAO,CAAC,aAAD,CAAzC;;AACA,MAAM;EAACK;AAAD,IAAmBL,OAAO,CAAC,kBAAD,CAAhC;;AAEA,MAAMM,kBAAN,SAAiCD,cAAjC,CAAgD;EAE5C;AACJ;AACA;AACA;EACIE,WAAW,CAACC,QAAD,EAAWC,OAAX,EAAoB;IAC3BA,OAAO,CAACC,IAAR,GAAeX,IAAI,CAACY,UAAL,CAAgB,4gDAAhB,CAAf;IACA,MAAMH,QAAN,EAAgBC,OAAhB;IACA,IAAI,CAAC,KAAKA,OAAL,CAAaG,QAAlB,EAA4B,KAAKH,OAAL,CAAaG,QAAb,GAAwB,YAAY,KAAKH,OAAL,CAAaI,EAAjD;IAE5B,KAAKC,OAAL,CAAaC,YAAb,GAA4B,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAA5B;EACH;;EAEDC,OAAO,GAAG;IACN,OAAO,MAAP;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIC,oBAAoB,CAACC,KAAD,EAAQC,SAAR,EAAmB;IACnCD,KAAK,GAAGA,KAAK,IAAI,CAAjB;IACA,MAAME,OAAO,GAAG,IAAItB,IAAJ,EAAhB;IACAsB,OAAO,CAACC,IAAR,CAAaC,SAAb,CAAuB,KAAKd,OAAL,CAAaG,QAApC,EAA8C,EAA9C;;IACA,IAAIO,KAAK,KAAK,CAAd,EAAiB;MACb;MACA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;QACzBH,OAAO,CAACC,IAAR,CAAaG,QAAb,CAAsB,CAAtB;MACH;IACJ,CALD,MAKO;MACH,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;MACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACK,OAAL,KAAiB,GAA5B,CAAlB;MACAV,OAAO,CAACC,IAAR,CAAaC,SAAb,CAAuBK,SAAS,GAAG,EAAnC,EAAuC,EAAvC;IACH;;IACDP,OAAO,CAACC,IAAR,CAAaC,SAAb,CAAuBJ,KAAvB,EAA8B,EAA9B;;IACA,IAAI,CAACC,SAAL,EAAgB;MACZC,OAAO,CAACC,IAAR,CAAaC,SAAb,CAAuB,CAAvB,EAA0B,CAA1B,EADY,CACkB;IACjC;;IACD,OAAOF,OAAP;EACH;EAED;AACJ;AACA;AACA;;;EACIW,cAAc,GAAG;IACb,MAAMC,IAAI,GAAG,IAAIlC,IAAJ,EAAb;IACAkC,IAAI,CAACX,IAAL,CAAUC,SAAV,CAAoB,CAApB,EAAuB,EAAvB;IACAU,IAAI,CAACX,IAAL,CAAUC,SAAV,CAAoB,KAAKd,OAAL,CAAaG,QAAjC,EAA2C,EAA3C;IACAqB,IAAI,CAACX,IAAL,CAAUY,UAAV,CAAqB,KAAKzB,OAAL,CAAa0B,SAAlC;IACAF,IAAI,CAACX,IAAL,CAAUC,SAAV,CAAoB,CAApB,EAAuB,CAAvB,EALa,CAKc;;IAC3B,OAAOU,IAAP;EACH;EAED;AACJ;AACA;;;EACsB,MAAZlB,YAAY,GAAG;IACjB,MAAMqB,SAAS,GAAG,MAAM,KAAKC,UAAL,EAAxB;IACA,OAAO,KAAK7B,QAAL,CAAc8B,KAAd,CAAoBF,SAAS,CAACG,QAAV,EAApB,EAA0C,gBAA1C,CAAP;EACH;;AAjE2C;;AAoEhDC,MAAM,CAACC,OAAP,GAAiB;EAACnC;AAAD,CAAjB"},"metadata":{},"sourceType":"script"}