{"ast":null,"code":"const eq = require('./eq');\n\nconst neq = require('./neq');\n\nconst gt = require('./gt');\n\nconst gte = require('./gte');\n\nconst lt = require('./lt');\n\nconst lte = require('./lte');\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version;\n      }\n\n      if (typeof b === 'object') {\n        b = b.version;\n      }\n\n      return a === b;\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version;\n      }\n\n      if (typeof b === 'object') {\n        b = b.version;\n      }\n\n      return a !== b;\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose);\n\n    case '!=':\n      return neq(a, b, loose);\n\n    case '>':\n      return gt(a, b, loose);\n\n    case '>=':\n      return gte(a, b, loose);\n\n    case '<':\n      return lt(a, b, loose);\n\n    case '<=':\n      return lte(a, b, loose);\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`);\n  }\n};\n\nmodule.exports = cmp;","map":{"version":3,"names":["eq","require","neq","gt","gte","lt","lte","cmp","a","op","b","loose","version","TypeError","module","exports"],"sources":["/home/rybakisa/Desktop/TEMP/HackaTON/TON Ads/ton-ads/node_modules/semver/functions/cmp.js"],"sourcesContent":["const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAMI,EAAE,GAAGJ,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAMK,GAAG,GAAGL,OAAO,CAAC,OAAD,CAAnB;;AAEA,MAAMM,GAAG,GAAG,CAACC,CAAD,EAAIC,EAAJ,EAAQC,CAAR,EAAWC,KAAX,KAAqB;EAC/B,QAAQF,EAAR;IACE,KAAK,KAAL;MACE,IAAI,OAAOD,CAAP,KAAa,QAAjB,EAA2B;QACzBA,CAAC,GAAGA,CAAC,CAACI,OAAN;MACD;;MACD,IAAI,OAAOF,CAAP,KAAa,QAAjB,EAA2B;QACzBA,CAAC,GAAGA,CAAC,CAACE,OAAN;MACD;;MACD,OAAOJ,CAAC,KAAKE,CAAb;;IAEF,KAAK,KAAL;MACE,IAAI,OAAOF,CAAP,KAAa,QAAjB,EAA2B;QACzBA,CAAC,GAAGA,CAAC,CAACI,OAAN;MACD;;MACD,IAAI,OAAOF,CAAP,KAAa,QAAjB,EAA2B;QACzBA,CAAC,GAAGA,CAAC,CAACE,OAAN;MACD;;MACD,OAAOJ,CAAC,KAAKE,CAAb;;IAEF,KAAK,EAAL;IACA,KAAK,GAAL;IACA,KAAK,IAAL;MACE,OAAOV,EAAE,CAACQ,CAAD,EAAIE,CAAJ,EAAOC,KAAP,CAAT;;IAEF,KAAK,IAAL;MACE,OAAOT,GAAG,CAACM,CAAD,EAAIE,CAAJ,EAAOC,KAAP,CAAV;;IAEF,KAAK,GAAL;MACE,OAAOR,EAAE,CAACK,CAAD,EAAIE,CAAJ,EAAOC,KAAP,CAAT;;IAEF,KAAK,IAAL;MACE,OAAOP,GAAG,CAACI,CAAD,EAAIE,CAAJ,EAAOC,KAAP,CAAV;;IAEF,KAAK,GAAL;MACE,OAAON,EAAE,CAACG,CAAD,EAAIE,CAAJ,EAAOC,KAAP,CAAT;;IAEF,KAAK,IAAL;MACE,OAAOL,GAAG,CAACE,CAAD,EAAIE,CAAJ,EAAOC,KAAP,CAAV;;IAEF;MACE,MAAM,IAAIE,SAAJ,CAAe,qBAAoBJ,EAAG,EAAtC,CAAN;EAxCJ;AA0CD,CA3CD;;AA4CAK,MAAM,CAACC,OAAP,GAAiBR,GAAjB"},"metadata":{},"sourceType":"script"}