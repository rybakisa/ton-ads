{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var sub = new Subscription();\n    sub.add(scheduler.schedule(function () {\n      return input.then(function (value) {\n        sub.add(scheduler.schedule(function () {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(function () {\n            return subscriber.complete();\n          }));\n        }));\n      }, function (err) {\n        sub.add(scheduler.schedule(function () {\n          return subscriber.error(err);\n        }));\n      });\n    }));\n    return sub;\n  });\n}","map":{"version":3,"mappings":"AAAA;AAEA,SAASA,UAAT,QAAuB,eAAvB;AAEA,SAAMC,YAAN,QAAgB,iBAAhB;OACE,SAAWC,eAAX,CAAyBC,KAAzB,EAAyBC,SAAzB,EAAmC;SACjC,IAASJ,UAAT,CAAgB,UAAcK,UAAd,EAAe;IAC/B,IAAIC,GAAG,GAAC,kBAAR;QAEIC,IAAIH,SAAI,SAAJ,CAAc,YAAS;aACzBD,WAAW,UAAYK,KAAZ,EAAY;QACvBF,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACK,QAAV,CAAmB;UACzBJ;UAENC,IAAGC,GAAH,CAAGH;YAAA;UAAA,EAAH;QACM,CAJM,CAAR;MAML,CAPK,EAOH,UAACM,GAAD,EAAC;QACGJ,GAAI,IAAJ,CAAIF;UAAA;QAAA,EAAJ;MACN,CATK;IAUT,CAXW;;GAHR","names":["Observable","Subscription","schedulePromise","input","scheduler","subscriber","sub","add","value","schedule","err"],"sources":["/home/rybakisa/Desktop/TEMP/HackaTON/TON Ads/ton-ads/node_modules/rxjs/src/internal/scheduled/schedulePromise.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}