{"ast":null,"code":"var _jsxFileName = \"/home/rybakisa/Desktop/TEMP/HackaTON/TON Ads/ton-ads/src/components/WalletConnection.js\";\nimport React from 'react';\nimport TonWeb from \"tonweb\"; // Use tonweb\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst tonweb = new TonWeb();\nconsole.log('start execution'); // Use extension\n\nconst onTonReady = () => {\n  console.log('tonready');\n\n  if (!window.tonProtocolVersion || window.tonProtocolVersion < 1) {\n    alert('Please update your TON Wallet Extension');\n    return;\n  }\n\n  const provider = window.ton;\n  console.log('isTonWallet=', provider.isTonWallet);\n\n  const connect = async () => {\n    // Request account access if needed\n    const accounts = await provider.send('ton_requestAccounts'); // Accounts now exposed, use them\n\n    const account = accounts[0]; // We currently only ever provide a single account,\n    // but the array gives us some room to grow.\n\n    showAccountAddress(account);\n    console.log(await provider.send('ton_requestWallets'));\n  };\n\n  document.getElementById('button').addEventListener('click', async () => {\n    try {\n      await connect(); // Send TONs\n\n      provider.send('ton_sendTransaction', [{\n        to: 'EQCD39VS5jcptHL8vMjEXrzGaRcCVYto7HUn4bpAOg8xqB2N',\n        // TON Foundation\n        value: '10000',\n        // 10000 nanotons = 0.00001 TONs\n        data: 'dapp test',\n        dataType: 'text'\n      }]);\n    } catch (error) {\n      // User denied or Error\n      console.log(error);\n    }\n  });\n  document.getElementById('signButton').addEventListener('click', async () => {\n    try {\n      await connect(); // Sign custom hex\n\n      const signature = await provider.send('ton_rawSign', [{\n        data: 'ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789'\n      }]);\n      console.log('signature is ' + signature);\n    } catch (error) {\n      // User denied or Error\n      console.log(error);\n    }\n  });\n  provider.on('accountsChanged', function (accounts) {\n    console.log('accountsChanged', accounts);\n    const account = accounts[0];\n    showAccountAddress(account);\n  });\n\n  function showAccountAddress(address) {\n    document.getElementById('address').innerText = address;\n  }\n}; // Initialize TON\n\n\nif (window.ton) {\n  onTonReady();\n} else {\n  console.log();\n}\n\nconst WalletConnection = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TON dApp Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"grey\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"My address is\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = WalletConnection;\nexport default WalletConnection;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletConnection\");","map":{"version":3,"names":["React","TonWeb","tonweb","console","log","onTonReady","window","tonProtocolVersion","alert","provider","ton","isTonWallet","connect","accounts","send","account","showAccountAddress","document","getElementById","addEventListener","to","value","data","dataType","error","signature","on","address","innerText","WalletConnection"],"sources":["/home/rybakisa/Desktop/TEMP/HackaTON/TON Ads/ton-ads/src/components/WalletConnection.js"],"sourcesContent":["import React from 'react'\nimport TonWeb from \"tonweb\";\n\n// Use tonweb\n\nconst tonweb = new TonWeb();\nconsole.log('start execution');\n\n// Use extension\n\nconst onTonReady = () => {\n    console.log('tonready');\n\n    if (!window.tonProtocolVersion || window.tonProtocolVersion < 1) {\n        alert('Please update your TON Wallet Extension');\n        return;\n    }\n\n    const provider = window.ton;\n    console.log('isTonWallet=', provider.isTonWallet);\n\n    const connect = async () => {\n        // Request account access if needed\n        const accounts = await provider.send('ton_requestAccounts');\n        // Accounts now exposed, use them\n        const account = accounts[0] // We currently only ever provide a single account,\n                                    // but the array gives us some room to grow.\n        showAccountAddress(account);\n\n        console.log(await provider.send('ton_requestWallets'));\n    }\n\n    document.getElementById('button').addEventListener('click', async () => {\n        try {\n            await connect();\n\n            // Send TONs\n            provider.send(\n                'ton_sendTransaction',\n                [{\n                    to: 'EQCD39VS5jcptHL8vMjEXrzGaRcCVYto7HUn4bpAOg8xqB2N', // TON Foundation\n                    value: '10000', // 10000 nanotons = 0.00001 TONs\n                    data: 'dapp test',\n                    dataType: 'text'\n                }]\n            );\n        } catch (error) {\n            // User denied or Error\n            console.log(error);\n        }\n    });\n\n    document.getElementById('signButton').addEventListener('click', async () => {\n        try {\n            await connect();\n\n            // Sign custom hex\n            const signature = await provider.send(\n                'ton_rawSign',\n                [{\n                    data: 'ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789'\n                }]\n            );\n            console.log('signature is ' + signature);\n        } catch (error) {\n            // User denied or Error\n            console.log(error);\n        }\n    });\n\n    provider.on('accountsChanged', function (accounts) {\n        console.log('accountsChanged', accounts);\n        const account = accounts[0];\n        showAccountAddress(account);\n    });\n\n    function showAccountAddress(address) {\n        document.getElementById('address').innerText = address;\n    }\n}\n\n// Initialize TON\n\nif (window.ton) {\n    onTonReady();\n} else {\n    console.log()\n}\n\nconst WalletConnection = () => {\n  return (\n    <>\n      <h1>TON dApp Example</h1>\n\n      <div class=\"grey\">\n          <span>My address is</span>\n          <span id=\"address\"></span>\n      </div>\n    </>\n  )\n}\n\nexport default WalletConnection\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;;;AAEA,MAAMC,MAAM,GAAG,IAAID,MAAJ,EAAf;AACAE,OAAO,CAACC,GAAR,CAAY,iBAAZ,E,CAEA;;AAEA,MAAMC,UAAU,GAAG,MAAM;EACrBF,OAAO,CAACC,GAAR,CAAY,UAAZ;;EAEA,IAAI,CAACE,MAAM,CAACC,kBAAR,IAA8BD,MAAM,CAACC,kBAAP,GAA4B,CAA9D,EAAiE;IAC7DC,KAAK,CAAC,yCAAD,CAAL;IACA;EACH;;EAED,MAAMC,QAAQ,GAAGH,MAAM,CAACI,GAAxB;EACAP,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BK,QAAQ,CAACE,WAArC;;EAEA,MAAMC,OAAO,GAAG,YAAY;IACxB;IACA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAT,CAAc,qBAAd,CAAvB,CAFwB,CAGxB;;IACA,MAAMC,OAAO,GAAGF,QAAQ,CAAC,CAAD,CAAxB,CAJwB,CAII;IACA;;IAC5BG,kBAAkB,CAACD,OAAD,CAAlB;IAEAZ,OAAO,CAACC,GAAR,CAAY,MAAMK,QAAQ,CAACK,IAAT,CAAc,oBAAd,CAAlB;EACH,CATD;;EAWAG,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,gBAAlC,CAAmD,OAAnD,EAA4D,YAAY;IACpE,IAAI;MACA,MAAMP,OAAO,EAAb,CADA,CAGA;;MACAH,QAAQ,CAACK,IAAT,CACI,qBADJ,EAEI,CAAC;QACGM,EAAE,EAAE,kDADP;QAC2D;QACxDC,KAAK,EAAE,OAFV;QAEmB;QAChBC,IAAI,EAAE,WAHT;QAIGC,QAAQ,EAAE;MAJb,CAAD,CAFJ;IASH,CAbD,CAaE,OAAOC,KAAP,EAAc;MACZ;MACArB,OAAO,CAACC,GAAR,CAAYoB,KAAZ;IACH;EACJ,CAlBD;EAoBAP,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,gBAAtC,CAAuD,OAAvD,EAAgE,YAAY;IACxE,IAAI;MACA,MAAMP,OAAO,EAAb,CADA,CAGA;;MACA,MAAMa,SAAS,GAAG,MAAMhB,QAAQ,CAACK,IAAT,CACpB,aADoB,EAEpB,CAAC;QACGQ,IAAI,EAAE;MADT,CAAD,CAFoB,CAAxB;MAMAnB,OAAO,CAACC,GAAR,CAAY,kBAAkBqB,SAA9B;IACH,CAXD,CAWE,OAAOD,KAAP,EAAc;MACZ;MACArB,OAAO,CAACC,GAAR,CAAYoB,KAAZ;IACH;EACJ,CAhBD;EAkBAf,QAAQ,CAACiB,EAAT,CAAY,iBAAZ,EAA+B,UAAUb,QAAV,EAAoB;IAC/CV,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BS,QAA/B;IACA,MAAME,OAAO,GAAGF,QAAQ,CAAC,CAAD,CAAxB;IACAG,kBAAkB,CAACD,OAAD,CAAlB;EACH,CAJD;;EAMA,SAASC,kBAAT,CAA4BW,OAA5B,EAAqC;IACjCV,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCU,SAAnC,GAA+CD,OAA/C;EACH;AACJ,CArED,C,CAuEA;;;AAEA,IAAIrB,MAAM,CAACI,GAAX,EAAgB;EACZL,UAAU;AACb,CAFD,MAEO;EACHF,OAAO,CAACC,GAAR;AACH;;AAED,MAAMyB,gBAAgB,GAAG,MAAM;EAC7B,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAK,KAAK,EAAC,MAAX;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAM,EAAE,EAAC;MAAT;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAUD,CAXD;;KAAMA,gB;AAaN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}