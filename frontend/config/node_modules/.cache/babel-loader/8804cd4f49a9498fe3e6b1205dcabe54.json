{"ast":null,"code":"const {\n  Cell\n} = require(\"../../boc\");\n\nconst {\n  BN,\n  Address\n} = require(\"../../utils\");\n\nconst {\n  DNS_CATEGORY_NEXT_RESOLVER,\n  DNS_CATEGORY_SITE,\n  DNS_CATEGORY_WALLET,\n  createSmartContractAddressRecord,\n  createAdnlAddressRecord,\n  createNextResolverRecord,\n  parseNextResolverRecord,\n  parseSmartContractAddressRecord,\n  dnsResolve\n} = require(\"./DnsUtils\"); // Need to get this address from network Config #4\n\n\nconst rootDnsAddress = 'Ef_BimcWrQ5pmAWfRqfeVHUCNV8XgsLqeAMBivKryXrghFW3';\n\nclass Dns {\n  /**\n   * @param provider  {HttpProvider}\n   */\n  constructor(provider) {\n    this.provider = provider;\n  }\n  /**\n   * @returns {Promise<Address>}\n   */\n\n\n  async getRootDnsAddress() {\n    if (this.provider.host.indexOf('testnet') === -1) {\n      // mainnet\n      return null;\n    }\n\n    return new Address(rootDnsAddress);\n  }\n  /**\n   * @param domain    {string} e.g \"sub.alice.ton\"\n   * @param category  {string | undefined} category of requested DNS record, null for all categories\n   * @param oneStep {boolean | undefined}  non-recursive\n   * @returns {Promise<Cell | Address | BN | null>}\n   */\n\n\n  resolve(domain, category, oneStep) {\n    if (this.provider.host.indexOf('testnet') === -1) {\n      // mainnet\n      return null;\n    }\n\n    return dnsResolve(this.provider, rootDnsAddress, domain, category, oneStep);\n  }\n  /**\n   * @param domain    {string} e.g \"sub.alice.ton\"\n   * @returns {Promise<Address | null>}\n   */\n\n\n  getWalletAddress(domain) {\n    if (this.provider.host.indexOf('testnet') === -1) {\n      // mainnet\n      return null;\n    }\n\n    return this.resolve(domain, DNS_CATEGORY_WALLET);\n  }\n\n}\n\nDns.resolve = dnsResolve;\nDns.createSmartContractAddressRecord = createSmartContractAddressRecord;\nDns.createAdnlAddressRecord = createAdnlAddressRecord;\nDns.createNextResolverRecord = createNextResolverRecord;\nDns.parseNextResolverRecord = parseNextResolverRecord;\nDns.parseSmartContractAddressRecord = parseSmartContractAddressRecord;\nDns.DNS_CATEGORY_NEXT_RESOLVER = DNS_CATEGORY_NEXT_RESOLVER;\nDns.DNS_CATEGORY_WALLET = DNS_CATEGORY_WALLET;\nDns.DNS_CATEGORY_SITE = DNS_CATEGORY_SITE;\nmodule.exports.default = Dns;","map":{"version":3,"names":["Cell","require","BN","Address","DNS_CATEGORY_NEXT_RESOLVER","DNS_CATEGORY_SITE","DNS_CATEGORY_WALLET","createSmartContractAddressRecord","createAdnlAddressRecord","createNextResolverRecord","parseNextResolverRecord","parseSmartContractAddressRecord","dnsResolve","rootDnsAddress","Dns","constructor","provider","getRootDnsAddress","host","indexOf","resolve","domain","category","oneStep","getWalletAddress","module","exports","default"],"sources":["/home/rybakisa/Desktop/TEMP/HackaTON/TON Ads/ton-ads/node_modules/tonweb/src/contract/dns/Dns.js"],"sourcesContent":["const {Cell} = require(\"../../boc\");\nconst {BN, Address} = require(\"../../utils\");\nconst {\n    DNS_CATEGORY_NEXT_RESOLVER,\n    DNS_CATEGORY_SITE,\n    DNS_CATEGORY_WALLET,\n    createSmartContractAddressRecord,\n    createAdnlAddressRecord,\n    createNextResolverRecord,\n    parseNextResolverRecord,\n    parseSmartContractAddressRecord,\n    dnsResolve\n} = require(\"./DnsUtils\");\n\n// Need to get this address from network Config #4\nconst rootDnsAddress = 'Ef_BimcWrQ5pmAWfRqfeVHUCNV8XgsLqeAMBivKryXrghFW3';\n\nclass Dns {\n    /**\n     * @param provider  {HttpProvider}\n     */\n    constructor(provider) {\n        this.provider = provider;\n    }\n\n    /**\n     * @returns {Promise<Address>}\n     */\n    async getRootDnsAddress() {\n        if (this.provider.host.indexOf('testnet') === -1) { // mainnet\n            return null;\n        }\n        return new Address(rootDnsAddress);\n    }\n\n    /**\n     * @param domain    {string} e.g \"sub.alice.ton\"\n     * @param category  {string | undefined} category of requested DNS record, null for all categories\n     * @param oneStep {boolean | undefined}  non-recursive\n     * @returns {Promise<Cell | Address | BN | null>}\n     */\n    resolve(domain, category, oneStep) {\n        if (this.provider.host.indexOf('testnet') === -1) { // mainnet\n            return null;\n        }\n        return dnsResolve(this.provider, rootDnsAddress, domain, category, oneStep)\n    }\n\n    /**\n     * @param domain    {string} e.g \"sub.alice.ton\"\n     * @returns {Promise<Address | null>}\n     */\n    getWalletAddress(domain) {\n        if (this.provider.host.indexOf('testnet') === -1) { // mainnet\n            return null;\n        }\n       return this.resolve(domain, DNS_CATEGORY_WALLET);\n    }\n}\n\nDns.resolve = dnsResolve;\nDns.createSmartContractAddressRecord = createSmartContractAddressRecord;\nDns.createAdnlAddressRecord = createAdnlAddressRecord;\nDns.createNextResolverRecord = createNextResolverRecord;\nDns.parseNextResolverRecord = parseNextResolverRecord;\nDns.parseSmartContractAddressRecord = parseSmartContractAddressRecord;\nDns.DNS_CATEGORY_NEXT_RESOLVER = DNS_CATEGORY_NEXT_RESOLVER;\nDns.DNS_CATEGORY_WALLET = DNS_CATEGORY_WALLET;\nDns.DNS_CATEGORY_SITE = DNS_CATEGORY_SITE;\n\nmodule.exports.default = Dns;"],"mappings":"AAAA,MAAM;EAACA;AAAD,IAASC,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAM;EAACC,EAAD;EAAKC;AAAL,IAAgBF,OAAO,CAAC,aAAD,CAA7B;;AACA,MAAM;EACFG,0BADE;EAEFC,iBAFE;EAGFC,mBAHE;EAIFC,gCAJE;EAKFC,uBALE;EAMFC,wBANE;EAOFC,uBAPE;EAQFC,+BARE;EASFC;AATE,IAUFX,OAAO,CAAC,YAAD,CAVX,C,CAYA;;;AACA,MAAMY,cAAc,GAAG,kDAAvB;;AAEA,MAAMC,GAAN,CAAU;EACN;AACJ;AACA;EACIC,WAAW,CAACC,QAAD,EAAW;IAClB,KAAKA,QAAL,GAAgBA,QAAhB;EACH;EAED;AACJ;AACA;;;EAC2B,MAAjBC,iBAAiB,GAAG;IACtB,IAAI,KAAKD,QAAL,CAAcE,IAAd,CAAmBC,OAAnB,CAA2B,SAA3B,MAA0C,CAAC,CAA/C,EAAkD;MAAE;MAChD,OAAO,IAAP;IACH;;IACD,OAAO,IAAIhB,OAAJ,CAAYU,cAAZ,CAAP;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIO,OAAO,CAACC,MAAD,EAASC,QAAT,EAAmBC,OAAnB,EAA4B;IAC/B,IAAI,KAAKP,QAAL,CAAcE,IAAd,CAAmBC,OAAnB,CAA2B,SAA3B,MAA0C,CAAC,CAA/C,EAAkD;MAAE;MAChD,OAAO,IAAP;IACH;;IACD,OAAOP,UAAU,CAAC,KAAKI,QAAN,EAAgBH,cAAhB,EAAgCQ,MAAhC,EAAwCC,QAAxC,EAAkDC,OAAlD,CAAjB;EACH;EAED;AACJ;AACA;AACA;;;EACIC,gBAAgB,CAACH,MAAD,EAAS;IACrB,IAAI,KAAKL,QAAL,CAAcE,IAAd,CAAmBC,OAAnB,CAA2B,SAA3B,MAA0C,CAAC,CAA/C,EAAkD;MAAE;MAChD,OAAO,IAAP;IACH;;IACF,OAAO,KAAKC,OAAL,CAAaC,MAAb,EAAqBf,mBAArB,CAAP;EACF;;AAxCK;;AA2CVQ,GAAG,CAACM,OAAJ,GAAcR,UAAd;AACAE,GAAG,CAACP,gCAAJ,GAAuCA,gCAAvC;AACAO,GAAG,CAACN,uBAAJ,GAA8BA,uBAA9B;AACAM,GAAG,CAACL,wBAAJ,GAA+BA,wBAA/B;AACAK,GAAG,CAACJ,uBAAJ,GAA8BA,uBAA9B;AACAI,GAAG,CAACH,+BAAJ,GAAsCA,+BAAtC;AACAG,GAAG,CAACV,0BAAJ,GAAiCA,0BAAjC;AACAU,GAAG,CAACR,mBAAJ,GAA0BA,mBAA1B;AACAQ,GAAG,CAACT,iBAAJ,GAAwBA,iBAAxB;AAEAoB,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBb,GAAzB"},"metadata":{},"sourceType":"script"}