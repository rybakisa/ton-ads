{"ast":null,"code":"const {\n  Contract\n} = require(\"../../index.js\");\n\nconst {\n  Cell\n} = require(\"../../../boc\");\n\nconst {\n  Address\n} = require(\"../../../utils\");\n\nconst {\n  parseAddress\n} = require('./NftUtils.js');\n/**\n * Not release - will change\n */\n\n\nclass NftMarketplace extends Contract {\n  /**\n   * @param provider\n   * @param options   {{ownerAddress: Address, address?: Address | string, cell?: Cell}}\n   */\n  constructor(provider, options) {\n    options.wc = 0;\n    options.code = options.code || Cell.oneFromBoc('B5EE9C7241010401006D000114FF00F4A413F4BCF2C80B01020120020300AAD23221C700915BE0D0D3030171B0915BE0FA40ED44D0FA403012C705F2E19101D31F01C0018E2BFA003001D4D43021F90070C8CA07CBFFC9D077748018C8CB05CB0258CF165004FA0213CB6BCCCCC971FB00915BE20004F2308EF7CCE7');\n    super(provider, options);\n  }\n  /**\n   * @override\n   * @private\n   * @return {Cell} cell contains nft marketplace data\n   */\n\n\n  createDataCell() {\n    const cell = new Cell();\n    cell.bits.writeAddress(this.options.ownerAddress);\n    return cell;\n  }\n\n}\n\nmodule.exports = {\n  NftMarketplace\n};","map":{"version":3,"names":["Contract","require","Cell","Address","parseAddress","NftMarketplace","constructor","provider","options","wc","code","oneFromBoc","createDataCell","cell","bits","writeAddress","ownerAddress","module","exports"],"sources":["/home/rybakisa/Desktop/TEMP/HackaTON/TON Ads/ton-ads/node_modules/tonweb/src/contract/token/nft/NftMarketplace.js"],"sourcesContent":["const {Contract} = require(\"../../index.js\");\nconst {Cell} = require(\"../../../boc\");\nconst {Address} = require(\"../../../utils\");\nconst {parseAddress} = require('./NftUtils.js');\n\n/**\n * Not release - will change\n */\nclass NftMarketplace extends Contract {\n    /**\n     * @param provider\n     * @param options   {{ownerAddress: Address, address?: Address | string, cell?: Cell}}\n     */\n    constructor(provider, options) {\n        options.wc = 0;\n        options.code = options.code || Cell.oneFromBoc('B5EE9C7241010401006D000114FF00F4A413F4BCF2C80B01020120020300AAD23221C700915BE0D0D3030171B0915BE0FA40ED44D0FA403012C705F2E19101D31F01C0018E2BFA003001D4D43021F90070C8CA07CBFFC9D077748018C8CB05CB0258CF165004FA0213CB6BCCCCC971FB00915BE20004F2308EF7CCE7');\n        super(provider, options);\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains nft marketplace data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeAddress(this.options.ownerAddress);\n        return cell;\n    }\n\n}\n\nmodule.exports = {NftMarketplace};\n"],"mappings":"AAAA,MAAM;EAACA;AAAD,IAAaC,OAAO,CAAC,gBAAD,CAA1B;;AACA,MAAM;EAACC;AAAD,IAASD,OAAO,CAAC,cAAD,CAAtB;;AACA,MAAM;EAACE;AAAD,IAAYF,OAAO,CAAC,gBAAD,CAAzB;;AACA,MAAM;EAACG;AAAD,IAAiBH,OAAO,CAAC,eAAD,CAA9B;AAEA;AACA;AACA;;;AACA,MAAMI,cAAN,SAA6BL,QAA7B,CAAsC;EAClC;AACJ;AACA;AACA;EACIM,WAAW,CAACC,QAAD,EAAWC,OAAX,EAAoB;IAC3BA,OAAO,CAACC,EAAR,GAAa,CAAb;IACAD,OAAO,CAACE,IAAR,GAAeF,OAAO,CAACE,IAAR,IAAgBR,IAAI,CAACS,UAAL,CAAgB,0PAAhB,CAA/B;IACA,MAAMJ,QAAN,EAAgBC,OAAhB;EACH;EAED;AACJ;AACA;AACA;AACA;;;EACII,cAAc,GAAG;IACb,MAAMC,IAAI,GAAG,IAAIX,IAAJ,EAAb;IACAW,IAAI,CAACC,IAAL,CAAUC,YAAV,CAAuB,KAAKP,OAAL,CAAaQ,YAApC;IACA,OAAOH,IAAP;EACH;;AApBiC;;AAwBtCI,MAAM,CAACC,OAAP,GAAiB;EAACb;AAAD,CAAjB"},"metadata":{},"sourceType":"script"}