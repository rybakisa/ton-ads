{"ast":null,"code":"const {\n  Contract\n} = require(\"../../index\");\n\nconst {\n  Cell\n} = require(\"../../../boc\");\n\nconst {\n  createOffchainUriCell,\n  parseOffchainUriCell,\n  parseAddress\n} = require(\"../nft/NftUtils\");\n\nconst {\n  Address,\n  BN,\n  bytesToBase64\n} = require(\"../../../utils\");\n\nclass JettonMinter extends Contract {\n  /**\n   * @param provider\n   * @param options   {{adminAddress: Address, jettonContentUri: string, jettonWalletCodeHex: string, address?: Address | string, code?: Cell}}\n   */\n  constructor(provider, options) {\n    options.wc = 0;\n    options.code = options.code || Cell.oneFromBocn    super(provider, options);\n  }\n  /**\n   * @override\n   * @private\n   * @return {Cell} cell contains jetton minter data\n   */\n\n\n  createDataCell() {\n    const cell = new Cell();\n    cell.bits.writeCoins(0); // total supply\n\n    cell.bits.writeAddress(this.options.adminAddress);\n    cell.refs[0] = createOffchainUriCell(this.options.jettonContentUri);\n    cell.refs[1] = Cell.oneFromBoc(this.options.jettonWalletCodeHex);\n    return cell;\n  }\n  /**\n   * params   {{jettonAmount: BN, destination: Address, amount: BN, queryId?: number}}\n   * @return {Cell}\n   */\n\n\n  createMintBody(params) {\n    const body = new Cell();\n    body.bits.writeUint(21, 32); // OP mint\n\n    body.bits.writeUint(params.queryId || 0, 64); // query_id\n\n    body.bits.writeAddress(params.destination);\n    body.bits.writeCoins(params.amount); // in Toncoins\n\n    const transferBody = new Cell(); // internal transfer\n\n    transferBody.bits.writeUint(0x178d4519, 32); // internal_transfer op\n\n    transferBody.bits.writeUint(params.queryId || 0, 64);\n    transferBody.bits.writeCoins(params.jettonAmount);\n    transferBody.bits.writeAddress(null); // from_address\n\n    transferBody.bits.writeAddress(null); // response_address\n\n    transferBody.bits.writeCoins(new BN(0)); // forward_amount\n\n    transferBody.bits.writeBit(false); // forward_payload in this slice, not separate cell\n\n    body.refs[0] = transferBody;\n    return body;\n  }\n  /**\n   * params   {{queryId?: number, newAdminAddress: Address}}\n   * @return {Cell}\n   */\n\n\n  createChangeAdminBody(params) {\n    if (params.newAdminAddress === undefined) throw new Error('Specify newAdminAddress');\n    const body = new Cell();\n    body.bits.writeUint(3, 32); // OP\n\n    body.bits.writeUint(params.queryId || 0, 64); // query_id\n\n    body.bits.writeAddress(params.newAdminAddress);\n    return body;\n  }\n  /**\n   * params   {{jettonContentUri: string, queryId?: number}}\n   * @return {Cell}\n   */\n\n\n  createEditContentBody(params) {\n    const body = new Cell();\n    body.bits.writeUint(4, 32); // OP\n\n    body.bits.writeUint(params.queryId || 0, 64); // query_id\n\n    body.refs[0] = createOffchainUriCell(params.jettonContentUri);\n    return body;\n  }\n  /**\n   * @return {Promise<{ totalSupply: BN, isMutable: boolean, adminAddress: Address|null, jettonContentUri: string, jettonWalletCode: Cell }>}\n   */\n\n\n  async getJettonData() {\n    const myAddress = await this.getAddress();\n    const result = await this.provider.call2(myAddress.toString(), 'get_jetton_data');\n    const totalSupply = result[0];\n    const isMutable = result[1].toNumber() === -1;\n    const adminAddress = parseAddress(result[2]);\n    const jettonContentUri = parseOffchainUriCell(result[3]);\n    const jettonWalletCode = result[4];\n    return {\n      totalSupply,\n      isMutable,\n      adminAddress,\n      jettonContentUri,\n      jettonWalletCode\n    };\n  }\n  /**\n   * params   {{ownerAddress: Address}}\n   * @return {Promise<Address>}\n   */\n\n\n  async getJettonWalletAddress(ownerAddress) {\n    const myAddress = await this.getAddress();\n    const cell = new Cell();\n    cell.bits.writeAddress(ownerAddress);\n    const result = await this.provider.call2(myAddress.toString(), 'get_wallet_address', [['tvm.Slice', bytesToBase64(await cell.toBoc(false))]]);\n    return parseAddress(result);\n  }\n\n}\n\nmodule.exports = {\n  JettonMinter\n};","map":{"version":3,"names":["Contract","require","Cell","createOffchainUriCell","parseOffchainUriCell","parseAddress","Address","BN","bytesToBase64","JettonMinter","constructor","provider","options","wc","code","oneFromBoc","createDataCell","cell","bits","writeCoins","writeAddress","adminAddress","refs","jettonContentUri","jettonWalletCodeHex","createMintBody","params","body","writeUint","queryId","destination","amount","transferBody","jettonAmount","writeBit","createChangeAdminBody","newAdminAddress","undefined","Error","createEditContentBody","getJettonData","myAddress","getAddress","result","call2","toString","totalSupply","isMutable","toNumber","jettonWalletCode","getJettonWalletAddress","ownerAddress","toBoc","module","exports"],"sources":["/home/rybakisa/Desktop/TEMP/HackaTON/TON Ads/ton-ads/node_modules/tonweb/src/contract/token/ft/JettonMinter.js"],"sourcesContent":["const {Contract} = require(\"../../index\");\nconst {Cell} = require(\"../../../boc\");\nconst {createOffchainUriCell, parseOffchainUriCell, parseAddress} = require(\"../nft/NftUtils\");\nconst {Address, BN, bytesToBase64} = require(\"../../../utils\");\n\nclass JettonMinter extends Contract {\n\n    /**\n     * @param provider\n     * @param options   {{adminAddress: Address, jettonContentUri: string, jettonWalletCodeHex: string, address?: Address | string, code?: Cell}}\n     */\n    constructor(provider, options) {\n        options.wc = 0;\n        options.code = options.code || Cell.oneFromBocn        super(provider, options);\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains jetton minter data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeCoins(0); // total supply\n        cell.bits.writeAddress(this.options.adminAddress);\n        cell.refs[0] = createOffchainUriCell(this.options.jettonContentUri);\n        cell.refs[1] = Cell.oneFromBoc(this.options.jettonWalletCodeHex);\n        return cell;\n    }\n\n    /**\n     * params   {{jettonAmount: BN, destination: Address, amount: BN, queryId?: number}}\n     * @return {Cell}\n     */\n     createMintBody(params) {\n        const body = new Cell();\n        body.bits.writeUint(21, 32); // OP mint\n        body.bits.writeUint(params.queryId || 0, 64); // query_id\n        body.bits.writeAddress(params.destination);\n        body.bits.writeCoins(params.amount); // in Toncoins\n\n        const transferBody = new Cell(); // internal transfer\n        transferBody.bits.writeUint(0x178d4519, 32); // internal_transfer op\n        transferBody.bits.writeUint(params.queryId || 0, 64);\n        transferBody.bits.writeCoins(params.jettonAmount);\n        transferBody.bits.writeAddress(null); // from_address\n        transferBody.bits.writeAddress(null); // response_address\n        transferBody.bits.writeCoins(new BN(0)); // forward_amount\n        transferBody.bits.writeBit(false); // forward_payload in this slice, not separate cell\n\n        body.refs[0] = transferBody;\n        return body;\n    }\n\n    /**\n     * params   {{queryId?: number, newAdminAddress: Address}}\n     * @return {Cell}\n     */\n    createChangeAdminBody(params) {\n        if (params.newAdminAddress === undefined) throw new Error('Specify newAdminAddress');\n\n        const body = new Cell();\n        body.bits.writeUint(3, 32); // OP\n        body.bits.writeUint(params.queryId || 0, 64); // query_id\n        body.bits.writeAddress(params.newAdminAddress);\n        return body;\n    }\n\n    /**\n     * params   {{jettonContentUri: string, queryId?: number}}\n     * @return {Cell}\n     */\n    createEditContentBody(params) {\n        const body = new Cell();\n        body.bits.writeUint(4, 32); // OP\n        body.bits.writeUint(params.queryId || 0, 64); // query_id\n        body.refs[0] = createOffchainUriCell(params.jettonContentUri);\n        return body;\n    }\n\n    /**\n     * @return {Promise<{ totalSupply: BN, isMutable: boolean, adminAddress: Address|null, jettonContentUri: string, jettonWalletCode: Cell }>}\n     */\n    async getJettonData() {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_jetton_data');\n\n        const totalSupply = result[0];\n        const isMutable = result[1].toNumber() === -1;\n        const adminAddress = parseAddress(result[2]);\n        const jettonContentUri = parseOffchainUriCell(result[3]);\n        const jettonWalletCode = result[4];\n\n        return {totalSupply, isMutable, adminAddress, jettonContentUri, jettonWalletCode};\n    }\n\n    /**\n     * params   {{ownerAddress: Address}}\n     * @return {Promise<Address>}\n     */\n    async getJettonWalletAddress(ownerAddress) {\n        const myAddress = await this.getAddress();\n        const cell = new Cell()\n        cell.bits.writeAddress(ownerAddress)\n\n        const result = await this.provider.call2(\n            myAddress.toString(),\n            'get_wallet_address',\n            [['tvm.Slice', bytesToBase64(await cell.toBoc(false))]],\n        );\n        return parseAddress(result)\n    }\n\n}\n\nmodule.exports = {JettonMinter};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}