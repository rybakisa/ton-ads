{"ast":null,"code":"/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar UnsubscriptionErrorImpl = /*@__PURE__*/function () {\n  function UnsubscriptionErrorImpl(errors) {\n    Error.call(this);\n    this.message = errors ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) {\n      return i + 1 + \") \" + err.toString();\n    }).join('\\n  ') : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = /*@__PURE__*/Object.create(Error.prototype);\n  return UnsubscriptionErrorImpl;\n}();\n\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;","map":{"version":3,"mappings":"AAQA;IACEA,uBAAS,gBAAgD;WAClDA,wBAAYC;IACjBC,KAAK,KAAL,CAAK,IAAL;SACKC,UAAOF,MAAM,GAEdA,MAAK,OAAL,GAAQ,2CAAR,GAA8BA;MAAA;IAAA,eAFhB,GAEgB;IAClC,KAAKG,IAAL,GAAW,qBAAX;IACA,cAAYH,MAAZ;IACD;EAED;;EAEAD,uBAAO,UAAP,GAA+B,2CAA/B;EACE,OAACA,uBAAD;AAMJ,CAnB2D","names":["UnsubscriptionErrorImpl","errors","Error","message","name"],"sources":["/home/rybakisa/Desktop/TEMP/HackaTON/TON Ads/ton-ads/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts"],"sourcesContent":["export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;"]},"metadata":{},"sourceType":"module"}