{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function skip(count) {\n  return function (source) {\n    return source.lift(new SkipOperator(count));\n  };\n}\n\nvar SkipOperator = /*@__PURE__*/function () {\n  function SkipOperator(total) {\n    this.total = total;\n  }\n\n  SkipOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  };\n\n  return SkipOperator;\n}();\n\nvar SkipSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SkipSubscriber, _super);\n\n  function SkipSubscriber(destination, total) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.total = total;\n    _this.count = 0;\n    return _this;\n  }\n\n  SkipSubscriber.prototype._next = function (x) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  };\n\n  return SkipSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AACA,OAAO,KAAEA,OAAT,MAAqB,OAArB;AAeA,SAAMC,UAAN,QAAqC,eAArC;OACE,SAAOC,IAAP,CAAQC,KAAR,EAA6B;EAC9B;IAAA;EAAA;AAED;;IACEC,4BAAiC;WAAbA,aAAKC,OAAQ;IAChC;EAED;;cACS,WAAOC,OAAU,UAAIC,UAAJ,EAAmBC,MAAnB,EAA+B;IACxD;EACH;;EAPA,OAOCJ,YAPD;AAcA,CAbmC;;IAaHK,wCAAaC,MAAb,EAAa;EAG3CV,kCAAYU,MAAZ;;WAAAD,eACEE,aAAMN;IADwC,YAAKK,MAAL,CAAKJ,KAAQ,IAAR,EAAQK,WAAR,KAAQ,IAAb;;IAFhDC,cAAgBP,KAAhB;;IAIC;EAES;;gBACE,CAACQ,UAAQC,QAAU,UAAEC,CAAF,EAAE;QAC7B,OAAKZ,KAAL,GAAK,KAAYE,OAAQ;MAC1B;IACF;EACH;;EAZgC;CAAA","names":["tslib_1","Subscriber","skip","count","SkipOperator","total","call","subscriber","source","SkipSubscriber","_super","destination","_this","prototype","_next","x"],"sources":["/home/rybakisa/Desktop/TEMP/HackaTON/TON Ads/ton-ads/node_modules/rxjs/src/internal/operators/skip.ts"],"sourcesContent":["import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}