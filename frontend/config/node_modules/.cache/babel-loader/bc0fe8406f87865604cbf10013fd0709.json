{"ast":null,"code":"const {\n  BN,\n  base64ToBytes\n} = require(\"../utils\");\n\nconst {\n  Cell\n} = require(\"../boc\");\n\nclass HttpProviderUtils {\n  static parseObject(x) {\n    const typeName = x['@type'];\n\n    switch (typeName) {\n      case 'tvm.list':\n      case 'tvm.tuple':\n        return x.elements.map(HttpProviderUtils.parseObject);\n\n      case 'tvm.cell':\n        return Cell.oneFromBoc(base64ToBytes(x.bytes));\n\n      case 'tvm.stackEntryCell':\n        return HttpProviderUtils.parseObject(x.cell);\n\n      case 'tvm.stackEntryTuple':\n        return HttpProviderUtils.parseObject(x.tuple);\n\n      case 'tvm.stackEntryNumber':\n        return HttpProviderUtils.parseObject(x.number);\n\n      case 'tvm.numberDecimal':\n        return new BN(x.number, 10);\n\n      default:\n        throw new Error('unknown type ' + typeName);\n    }\n  }\n  /**\n   * @param pair  {any[]}\n   * @return {any}\n   */\n\n\n  static parseResponseStack(pair) {\n    const typeName = pair[0];\n    const value = pair[1];\n\n    switch (typeName) {\n      case 'num':\n        return new BN(value.replace(/0x/, ''), 16);\n\n      case 'list':\n      case 'tuple':\n        return HttpProviderUtils.parseObject(value);\n\n      case 'cell':\n        const contentBytes = base64ToBytes(value.bytes);\n        return Cell.oneFromBoc(contentBytes);\n\n      default:\n        throw new Error('unknown type ' + typeName);\n    }\n  }\n\n  static parseResponse(result) {\n    if (result.exit_code !== 0) {\n      const err = new Error('http provider parse response error');\n      err.result = result;\n      throw err;\n    }\n\n    const arr = result.stack.map(HttpProviderUtils.parseResponseStack);\n    return arr.length === 1 ? arr[0] : arr;\n  }\n\n  static makeArg(arg) {\n    if (arg instanceof BN || arg instanceof Number) {\n      return ['num', arg];\n    } else {\n      throw new Error('unknown arg type ' + arg);\n    }\n  }\n\n  static makeArgs(args) {\n    return args.map(this.makeArg);\n  }\n\n}\n\nmodule.exports.default = HttpProviderUtils;","map":{"version":3,"names":["BN","base64ToBytes","require","Cell","HttpProviderUtils","parseObject","x","typeName","elements","map","oneFromBoc","bytes","cell","tuple","number","Error","parseResponseStack","pair","value","replace","contentBytes","parseResponse","result","exit_code","err","arr","stack","length","makeArg","arg","Number","makeArgs","args","module","exports","default"],"sources":["/home/rybakisa/Desktop/TEMP/HackaTON/TON Ads/ton-ads/node_modules/tonweb/src/providers/HttpProviderUtils.js"],"sourcesContent":["const {BN, base64ToBytes} = require(\"../utils\");\nconst {Cell} = require(\"../boc\");\n\nclass HttpProviderUtils {\n\n    static parseObject(x) {\n        const typeName = x['@type'];\n        switch (typeName) {\n            case 'tvm.list':\n            case 'tvm.tuple':\n                return x.elements.map(HttpProviderUtils.parseObject);\n            case 'tvm.cell':\n                return Cell.oneFromBoc(base64ToBytes(x.bytes));\n            case 'tvm.stackEntryCell':\n                return HttpProviderUtils.parseObject(x.cell);\n            case 'tvm.stackEntryTuple':\n                return HttpProviderUtils.parseObject(x.tuple);\n            case 'tvm.stackEntryNumber':\n                return HttpProviderUtils.parseObject(x.number);\n            case 'tvm.numberDecimal':\n                return new BN(x.number, 10);\n            default:\n                throw new Error('unknown type ' + typeName);\n        }\n    }\n\n    /**\n     * @param pair  {any[]}\n     * @return {any}\n     */\n    static parseResponseStack(pair) {\n        const typeName = pair[0];\n        const value = pair[1];\n\n        switch (typeName) {\n            case 'num':\n                return new BN(value.replace(/0x/, ''), 16);\n            case 'list':\n            case 'tuple':\n                return HttpProviderUtils.parseObject(value);\n            case 'cell':\n                const contentBytes = base64ToBytes(value.bytes);\n                return Cell.oneFromBoc(contentBytes);\n            default:\n                throw new Error('unknown type ' + typeName);\n        }\n    }\n\n    static parseResponse(result) {\n        if (result.exit_code !== 0) {\n            const err = new Error('http provider parse response error')\n            err.result = result\n            throw err\n        }\n\n        const arr = result.stack.map(HttpProviderUtils.parseResponseStack);\n        return arr.length === 1 ? arr[0] : arr;\n    }\n\n    static makeArg(arg) {\n        if (arg instanceof BN || arg instanceof Number) {\n            return ['num', arg];\n        } else {\n            throw new Error('unknown arg type ' + arg);\n        }\n    }\n\n    static makeArgs(args) {\n        return args.map(this.makeArg);\n    }\n\n}\n\nmodule.exports.default = HttpProviderUtils;\n"],"mappings":"AAAA,MAAM;EAACA,EAAD;EAAKC;AAAL,IAAsBC,OAAO,CAAC,UAAD,CAAnC;;AACA,MAAM;EAACC;AAAD,IAASD,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAME,iBAAN,CAAwB;EAEF,OAAXC,WAAW,CAACC,CAAD,EAAI;IAClB,MAAMC,QAAQ,GAAGD,CAAC,CAAC,OAAD,CAAlB;;IACA,QAAQC,QAAR;MACI,KAAK,UAAL;MACA,KAAK,WAAL;QACI,OAAOD,CAAC,CAACE,QAAF,CAAWC,GAAX,CAAeL,iBAAiB,CAACC,WAAjC,CAAP;;MACJ,KAAK,UAAL;QACI,OAAOF,IAAI,CAACO,UAAL,CAAgBT,aAAa,CAACK,CAAC,CAACK,KAAH,CAA7B,CAAP;;MACJ,KAAK,oBAAL;QACI,OAAOP,iBAAiB,CAACC,WAAlB,CAA8BC,CAAC,CAACM,IAAhC,CAAP;;MACJ,KAAK,qBAAL;QACI,OAAOR,iBAAiB,CAACC,WAAlB,CAA8BC,CAAC,CAACO,KAAhC,CAAP;;MACJ,KAAK,sBAAL;QACI,OAAOT,iBAAiB,CAACC,WAAlB,CAA8BC,CAAC,CAACQ,MAAhC,CAAP;;MACJ,KAAK,mBAAL;QACI,OAAO,IAAId,EAAJ,CAAOM,CAAC,CAACQ,MAAT,EAAiB,EAAjB,CAAP;;MACJ;QACI,MAAM,IAAIC,KAAJ,CAAU,kBAAkBR,QAA5B,CAAN;IAfR;EAiBH;EAED;AACJ;AACA;AACA;;;EAC6B,OAAlBS,kBAAkB,CAACC,IAAD,EAAO;IAC5B,MAAMV,QAAQ,GAAGU,IAAI,CAAC,CAAD,CAArB;IACA,MAAMC,KAAK,GAAGD,IAAI,CAAC,CAAD,CAAlB;;IAEA,QAAQV,QAAR;MACI,KAAK,KAAL;QACI,OAAO,IAAIP,EAAJ,CAAOkB,KAAK,CAACC,OAAN,CAAc,IAAd,EAAoB,EAApB,CAAP,EAAgC,EAAhC,CAAP;;MACJ,KAAK,MAAL;MACA,KAAK,OAAL;QACI,OAAOf,iBAAiB,CAACC,WAAlB,CAA8Ba,KAA9B,CAAP;;MACJ,KAAK,MAAL;QACI,MAAME,YAAY,GAAGnB,aAAa,CAACiB,KAAK,CAACP,KAAP,CAAlC;QACA,OAAOR,IAAI,CAACO,UAAL,CAAgBU,YAAhB,CAAP;;MACJ;QACI,MAAM,IAAIL,KAAJ,CAAU,kBAAkBR,QAA5B,CAAN;IAVR;EAYH;;EAEmB,OAAbc,aAAa,CAACC,MAAD,EAAS;IACzB,IAAIA,MAAM,CAACC,SAAP,KAAqB,CAAzB,EAA4B;MACxB,MAAMC,GAAG,GAAG,IAAIT,KAAJ,CAAU,oCAAV,CAAZ;MACAS,GAAG,CAACF,MAAJ,GAAaA,MAAb;MACA,MAAME,GAAN;IACH;;IAED,MAAMC,GAAG,GAAGH,MAAM,CAACI,KAAP,CAAajB,GAAb,CAAiBL,iBAAiB,CAACY,kBAAnC,CAAZ;IACA,OAAOS,GAAG,CAACE,MAAJ,KAAe,CAAf,GAAmBF,GAAG,CAAC,CAAD,CAAtB,GAA4BA,GAAnC;EACH;;EAEa,OAAPG,OAAO,CAACC,GAAD,EAAM;IAChB,IAAIA,GAAG,YAAY7B,EAAf,IAAqB6B,GAAG,YAAYC,MAAxC,EAAgD;MAC5C,OAAO,CAAC,KAAD,EAAQD,GAAR,CAAP;IACH,CAFD,MAEO;MACH,MAAM,IAAId,KAAJ,CAAU,sBAAsBc,GAAhC,CAAN;IACH;EACJ;;EAEc,OAARE,QAAQ,CAACC,IAAD,EAAO;IAClB,OAAOA,IAAI,CAACvB,GAAL,CAAS,KAAKmB,OAAd,CAAP;EACH;;AAlEmB;;AAsExBK,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB/B,iBAAzB"},"metadata":{},"sourceType":"script"}