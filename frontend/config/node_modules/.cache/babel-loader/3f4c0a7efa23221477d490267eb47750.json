{"ast":null,"code":"const {\n  Cell\n} = require(\"../../boc\");\n/**\n * @param cell  {Cell}\n * @param publicKey {Uint8Array}\n */\n\n\nconst writePublicKey = (cell, publicKey) => {\n  if (publicKey.length !== 256 / 8) {\n    throw new Error('invalid publicKey length');\n  }\n\n  cell.bits.writeBytes(publicKey);\n};\n/**\n * @param cell  {Cell}\n * @param signature {Uint8Array}\n */\n\n\nconst writeSignature = (cell, signature) => {\n  if (signature.length !== 512 / 8) {\n    throw new Error('invalid signature length');\n  }\n\n  cell.bits.writeBytes(signature);\n};\n/**\n * @param signature {Uint8Array}\n * @returns {Cell}\n */\n\n\nconst createSignatureCell = signature => {\n  const cell = new Cell();\n  writeSignature(cell, signature);\n  return cell;\n};\n/**\n * @param cell  {Cell}\n * @param ref   {Cell}\n */\n\n\nconst writeMayBe = (cell, ref) => {\n  if (ref) {\n    cell.bits.writeBit(1);\n\n    if (cell.refs.length >= 4) {\n      throw new Error('refs overflow');\n    }\n\n    cell.refs.push(ref);\n  } else {\n    cell.bits.writeBit(0);\n  }\n};\n/**\n * @param cell  {Cell}\n * @param ref   {Cell}\n */\n\n\nconst writeDict = writeMayBe;\nconst tag_init = 0x696e6974;\nconst tag_cooperative_close = 0x436c6f73;\nconst tag_cooperative_commit = 0x43436d74;\nconst tag_start_uncooperative_close = 0x556e436c;\nconst tag_challenge_state = 0x43686751;\nconst tag_settle_conditionals = 0x436c436e;\nconst tag_state = 0x43685374;\nconst op_top_up_balance = 1741148801; // crc32(\"top_up_balance add_A:Coins add_B:Coins = InternalMsgBody\");\n\nconst op_init_channel = 235282626; // crc32(\"init_channel is_A:Bool signature:bits512 tag:# = tag 1768843636 channel_id:uint128 balance_A:Coins balance_B:Coins = InternalMsgBody\");\n\nconst op_cooperative_close = 1433884798; // crc32(\"cooperative_close sig_A:^bits512 sig_B:^bits512 tag:# = tag 1131179891 channel_id:uint128 balance_A:Coins balance_B:Coins seqno_A:uint64 seqno_B:uint64 = InternalMsgBody\");\n\nconst op_cooperative_commit = 2040604399; // crc32(\"cooperative_commit sig_A:^bits512 sig_B:^bits512 tag:# = tag 1128492404 channel_id:uint128 seqno_A:uint64 seqno_B:uint64 = InternalMsgBody\");\n\nconst op_start_uncooperative_close = 521476815; // crc32(\"start_uncooperative_close signed_by_A:Bool signature:bits512 tag:# = tag 1433289580 channel_id:uint128 sch_A:^SignedSemiChannel sch_B:^SignedSemiChannel = InternalMsgBody\");\n\nconst op_challenge_quarantined_state = 143567410; // crc32(\"challenge_quarantined_state challenged_by_A:Bool signature:bits512 tag:# = tag 1130915665 channel_id:uint128 sch_A:^SignedSemiChannel sch_B:^SignedSemiChannel = InternalMsgBody\");\n\nconst op_settle_conditionals = 1727459433; // crc32(\"settle_conditionals from_A:Bool signature:bits512 tag:# = tag 1131168622 channel_id:uint128 conditionals_to_settle:HashmapE 32 Cell = InternalMsgBody\");\n\nconst op_finish_uncooperative_close = 625158801; // crc32(\"finish_uncooperative_close = InternalMsgBody\");\n\nconst op_channel_closed = -572749638; // crc32(\"channel_closed channel_id:uint128 = InternalMsgBody\");\n\n/**\n * @param params    {{coinsA: BN, coinsB: BN}}\n * @returns {Cell}\n */\n\nconst createTopUpBalance = params => {\n  const cell = new Cell();\n  cell.bits.writeUint(op_top_up_balance, 32); // OP\n\n  cell.bits.writeCoins(params.coinsA);\n  cell.bits.writeCoins(params.coinsB);\n  return cell;\n};\n/**\n * @param params    {{channelId: BN, balanceA: BN, balanceB: BN}}\n * @returns {Cell}\n */\n\n\nconst createInitChannelBody = params => {\n  const cell = new Cell();\n  cell.bits.writeUint(tag_init, 32);\n  cell.bits.writeUint(params.channelId, 128);\n  cell.bits.writeCoins(params.balanceA);\n  cell.bits.writeCoins(params.balanceB);\n  return cell;\n};\n/**\n * @param params    {{channelId: BN, balanceA: BN, balanceB: BN, seqnoA: BN, seqnoB: BN}}\n * @returns {Cell}\n */\n\n\nconst createCooperativeCloseChannelBody = params => {\n  const cell = new Cell();\n  cell.bits.writeUint(tag_cooperative_close, 32);\n  cell.bits.writeUint(params.channelId, 128);\n  cell.bits.writeCoins(params.balanceA);\n  cell.bits.writeCoins(params.balanceB);\n  cell.bits.writeUint(params.seqnoA, 64);\n  cell.bits.writeUint(params.seqnoB, 64);\n  return cell;\n};\n/**\n * @param params    {{channelId: BN, seqnoA: BN, seqnoB: BN}}\n * @returns {Cell}\n */\n\n\nconst createCooperativeCommitBody = params => {\n  const cell = new Cell();\n  cell.bits.writeUint(tag_cooperative_commit, 32);\n  cell.bits.writeUint(params.channelId, 128);\n  cell.bits.writeUint(params.seqnoA, 64);\n  cell.bits.writeUint(params.seqnoB, 64);\n  return cell;\n};\n/**\n * @param params    {{amount: BN, condition: Cell}} condition is code\n * @returns {Cell}\n */\n\n\nconst createConditionalPayment = params => {\n  const cell = new Cell();\n  cell.bits.writeCoins(params.amount);\n  cell.writeCell(params.condition);\n  return cell;\n};\n/**\n * @param params    {{seqno: BN, sentCoins: BN, conditionals: Cell | null}} conditionals - dictionary with uint32 keys and values created by `createConditionalPayment`\n * @returns {Cell}\n */\n\n\nconst createSemiChannelBody = params => {\n  const cell = new Cell();\n  cell.bits.writeUint(params.seqno, 64); // body start\n\n  cell.bits.writeCoins(params.sentCoins);\n  writeDict(cell, params.conditionals); // HashmapE 32 ConditionalPayment\n\n  return cell;\n};\n/**\n * @param params    {{channelId: BN, semiChannelBody: Cell, counterpartySemiChannelBody?: Cell}} created by `createSemiChannelBody`\n * @returns {Cell}\n */\n\n\nconst createSemiChannelState = params => {\n  const cell = new Cell();\n  cell.bits.writeUint(tag_state, 32);\n  cell.bits.writeUint(params.channelId, 128);\n  cell.writeCell(params.semiChannelBody);\n  writeMayBe(cell, params.counterpartySemiChannelBody);\n  return cell;\n};\n/**\n * @param params    {{signature: Uint8Array, state: Cell}}  `state` created by `createSemiChannelState`\n */\n\n\nconst createSignedSemiChannelState = params => {\n  const cell = new Cell();\n  writeSignature(cell, params.signature);\n  cell.writeCell(params.state);\n  return cell;\n};\n/**\n * @param params    {{channelId: BN, signedSemiChannelStateA: Cell, signedSemiChannelStateB: Cell}} `signedSemiChannelState` created by `createSignedSemiChannelState`\n * @returns {Cell}\n */\n\n\nconst createStartUncooperativeCloseBody = params => {\n  const cell = new Cell();\n  cell.bits.writeUint(tag_start_uncooperative_close, 32);\n  cell.bits.writeUint(params.channelId, 128);\n  cell.refs[0] = params.signedSemiChannelStateA;\n  cell.refs[1] = params.signedSemiChannelStateB;\n  return cell;\n};\n/**\n * @param params    {{channelId: BN, signedSemiChannelStateA: Cell, signedSemiChannelStateB: Cell}} `signedSemiChannelState` created by `createSignedSemiChannelState`\n * @returns {Cell}\n */\n\n\nconst createChallengeQuarantinedStateBody = params => {\n  const cell = new Cell();\n  cell.bits.writeUint(tag_challenge_state, 32);\n  cell.bits.writeUint(params.channelId, 128);\n  cell.refs[0] = params.signedSemiChannelStateA;\n  cell.refs[1] = params.signedSemiChannelStateB;\n  return cell;\n};\n/**\n * @param params    {{channelId: BN, conditionalsToSettle: Cell | null}} conditionalsToSettle - dictionary with uint32 keys and values created by `createConditionalPayment`\n * @returns {Cell}\n */\n\n\nconst createSettleConditionalsBody = params => {\n  const cell = new Cell();\n  cell.bits.writeUint(tag_settle_conditionals, 32);\n  cell.bits.writeUint(params.channelId, 128);\n  writeDict(cell, params.conditionalsToSettle); // HashmapE 32 Cell\n\n  return cell;\n};\n/**\n * @returns {Cell}\n */\n\n\nconst createFinishUncooperativeClose = () => {\n  const cell = new Cell();\n  cell.bits.writeUint(op_finish_uncooperative_close, 32); // OP\n\n  return cell;\n};\n/**\n * @param params    {{op: number, isA: boolean, signature: Uint8Array, cell: Cell}}\n * @return {Cell}\n */\n\n\nconst createOneSignature = params => {\n  const cell = new Cell();\n  cell.bits.writeUint(params.op, 32); // OP\n\n  cell.bits.writeBit(params.isA);\n  writeSignature(cell, params.signature);\n  cell.writeCell(params.cell);\n  return cell;\n};\n/**\n * @param params    {{op: number, signatureA: Uint8Array, signatureB: Uint8Array, cell: Cell}}\n * @return {Cell}\n */\n\n\nconst createTwoSignature = params => {\n  const cell = new Cell();\n  cell.bits.writeUint(params.op, 32); // OP\n\n  cell.refs[0] = createSignatureCell(params.signatureA);\n  cell.refs[1] = createSignatureCell(params.signatureB);\n  cell.writeCell(params.cell);\n  return cell;\n};\n\nmodule.exports = {\n  writePublicKey,\n  writeSignature,\n  createSignatureCell,\n  tag_init,\n  tag_cooperative_close,\n  tag_cooperative_commit,\n  tag_start_uncooperative_close,\n  tag_challenge_state,\n  tag_settle_conditionals,\n  tag_state,\n  op_top_up_balance,\n  op_init_channel,\n  op_cooperative_close,\n  op_cooperative_commit,\n  op_start_uncooperative_close,\n  op_challenge_quarantined_state,\n  op_settle_conditionals,\n  op_finish_uncooperative_close,\n  op_channel_closed,\n  createTopUpBalance,\n  createInitChannelBody,\n  createCooperativeCloseChannelBody,\n  createCooperativeCommitBody,\n  createConditionalPayment,\n  createSemiChannelBody,\n  createSemiChannelState,\n  createSignedSemiChannelState,\n  createStartUncooperativeCloseBody,\n  createChallengeQuarantinedStateBody,\n  createSettleConditionalsBody,\n  createFinishUncooperativeClose,\n  createOneSignature,\n  createTwoSignature\n};","map":{"version":3,"names":["Cell","require","writePublicKey","cell","publicKey","length","Error","bits","writeBytes","writeSignature","signature","createSignatureCell","writeMayBe","ref","writeBit","refs","push","writeDict","tag_init","tag_cooperative_close","tag_cooperative_commit","tag_start_uncooperative_close","tag_challenge_state","tag_settle_conditionals","tag_state","op_top_up_balance","op_init_channel","op_cooperative_close","op_cooperative_commit","op_start_uncooperative_close","op_challenge_quarantined_state","op_settle_conditionals","op_finish_uncooperative_close","op_channel_closed","createTopUpBalance","params","writeUint","writeCoins","coinsA","coinsB","createInitChannelBody","channelId","balanceA","balanceB","createCooperativeCloseChannelBody","seqnoA","seqnoB","createCooperativeCommitBody","createConditionalPayment","amount","writeCell","condition","createSemiChannelBody","seqno","sentCoins","conditionals","createSemiChannelState","semiChannelBody","counterpartySemiChannelBody","createSignedSemiChannelState","state","createStartUncooperativeCloseBody","signedSemiChannelStateA","signedSemiChannelStateB","createChallengeQuarantinedStateBody","createSettleConditionalsBody","conditionalsToSettle","createFinishUncooperativeClose","createOneSignature","op","isA","createTwoSignature","signatureA","signatureB","module","exports"],"sources":["/home/rybakisa/Desktop/TEMP/HackaTON/TON Ads/ton-ads/node_modules/tonweb/src/contract/payments/PaymentUtils.js"],"sourcesContent":["const {Cell} = require(\"../../boc\");\n\n/**\n * @param cell  {Cell}\n * @param publicKey {Uint8Array}\n */\nconst writePublicKey = (cell, publicKey) => {\n    if (publicKey.length !== 256 / 8) {\n        throw new Error('invalid publicKey length');\n    }\n    cell.bits.writeBytes(publicKey);\n}\n\n/**\n * @param cell  {Cell}\n * @param signature {Uint8Array}\n */\nconst writeSignature = (cell, signature) => {\n    if (signature.length !== 512 / 8) {\n        throw new Error('invalid signature length');\n    }\n    cell.bits.writeBytes(signature);\n}\n\n/**\n * @param signature {Uint8Array}\n * @returns {Cell}\n */\nconst createSignatureCell = (signature) => {\n    const cell = new Cell();\n    writeSignature(cell, signature);\n    return cell;\n}\n\n/**\n * @param cell  {Cell}\n * @param ref   {Cell}\n */\nconst writeMayBe = (cell, ref) => {\n    if (ref) {\n        cell.bits.writeBit(1);\n        if (cell.refs.length >= 4) {\n            throw new Error('refs overflow')\n        }\n        cell.refs.push(ref);\n    } else {\n        cell.bits.writeBit(0);\n    }\n}\n\n/**\n * @param cell  {Cell}\n * @param ref   {Cell}\n */\nconst writeDict = writeMayBe;\n\nconst tag_init = 0x696e6974;\nconst tag_cooperative_close = 0x436c6f73;\nconst tag_cooperative_commit = 0x43436d74;\nconst tag_start_uncooperative_close = 0x556e436c;\nconst tag_challenge_state = 0x43686751;\nconst tag_settle_conditionals = 0x436c436e;\nconst tag_state = 0x43685374;\n\nconst op_top_up_balance = 1741148801; // crc32(\"top_up_balance add_A:Coins add_B:Coins = InternalMsgBody\");\nconst op_init_channel = 235282626; // crc32(\"init_channel is_A:Bool signature:bits512 tag:# = tag 1768843636 channel_id:uint128 balance_A:Coins balance_B:Coins = InternalMsgBody\");\nconst op_cooperative_close = 1433884798; // crc32(\"cooperative_close sig_A:^bits512 sig_B:^bits512 tag:# = tag 1131179891 channel_id:uint128 balance_A:Coins balance_B:Coins seqno_A:uint64 seqno_B:uint64 = InternalMsgBody\");\nconst op_cooperative_commit = 2040604399; // crc32(\"cooperative_commit sig_A:^bits512 sig_B:^bits512 tag:# = tag 1128492404 channel_id:uint128 seqno_A:uint64 seqno_B:uint64 = InternalMsgBody\");\nconst op_start_uncooperative_close = 521476815; // crc32(\"start_uncooperative_close signed_by_A:Bool signature:bits512 tag:# = tag 1433289580 channel_id:uint128 sch_A:^SignedSemiChannel sch_B:^SignedSemiChannel = InternalMsgBody\");\nconst op_challenge_quarantined_state = 143567410; // crc32(\"challenge_quarantined_state challenged_by_A:Bool signature:bits512 tag:# = tag 1130915665 channel_id:uint128 sch_A:^SignedSemiChannel sch_B:^SignedSemiChannel = InternalMsgBody\");\nconst op_settle_conditionals = 1727459433; // crc32(\"settle_conditionals from_A:Bool signature:bits512 tag:# = tag 1131168622 channel_id:uint128 conditionals_to_settle:HashmapE 32 Cell = InternalMsgBody\");\nconst op_finish_uncooperative_close = 625158801; // crc32(\"finish_uncooperative_close = InternalMsgBody\");\nconst op_channel_closed = -572749638; // crc32(\"channel_closed channel_id:uint128 = InternalMsgBody\");\n\n/**\n * @param params    {{coinsA: BN, coinsB: BN}}\n * @returns {Cell}\n */\nconst createTopUpBalance = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(op_top_up_balance, 32); // OP\n    cell.bits.writeCoins(params.coinsA);\n    cell.bits.writeCoins(params.coinsB);\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, balanceA: BN, balanceB: BN}}\n * @returns {Cell}\n */\nconst createInitChannelBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_init, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    cell.bits.writeCoins(params.balanceA);\n    cell.bits.writeCoins(params.balanceB);\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, balanceA: BN, balanceB: BN, seqnoA: BN, seqnoB: BN}}\n * @returns {Cell}\n */\nconst createCooperativeCloseChannelBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_cooperative_close, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    cell.bits.writeCoins(params.balanceA);\n    cell.bits.writeCoins(params.balanceB);\n    cell.bits.writeUint(params.seqnoA, 64);\n    cell.bits.writeUint(params.seqnoB, 64);\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, seqnoA: BN, seqnoB: BN}}\n * @returns {Cell}\n */\nconst createCooperativeCommitBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_cooperative_commit, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    cell.bits.writeUint(params.seqnoA, 64);\n    cell.bits.writeUint(params.seqnoB, 64);\n    return cell;\n}\n\n/**\n * @param params    {{amount: BN, condition: Cell}} condition is code\n * @returns {Cell}\n */\nconst createConditionalPayment = (params) => {\n    const cell = new Cell();\n    cell.bits.writeCoins(params.amount);\n    cell.writeCell(params.condition);\n    return cell;\n}\n\n/**\n * @param params    {{seqno: BN, sentCoins: BN, conditionals: Cell | null}} conditionals - dictionary with uint32 keys and values created by `createConditionalPayment`\n * @returns {Cell}\n */\nconst createSemiChannelBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(params.seqno, 64); // body start\n    cell.bits.writeCoins(params.sentCoins);\n    writeDict(cell, params.conditionals);  // HashmapE 32 ConditionalPayment\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, semiChannelBody: Cell, counterpartySemiChannelBody?: Cell}} created by `createSemiChannelBody`\n * @returns {Cell}\n */\nconst createSemiChannelState = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_state, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    cell.writeCell(params.semiChannelBody);\n    writeMayBe(cell, params.counterpartySemiChannelBody)\n    return cell;\n}\n\n/**\n * @param params    {{signature: Uint8Array, state: Cell}}  `state` created by `createSemiChannelState`\n */\nconst createSignedSemiChannelState = (params) => {\n    const cell = new Cell();\n    writeSignature(cell, params.signature);\n    cell.writeCell(params.state);\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, signedSemiChannelStateA: Cell, signedSemiChannelStateB: Cell}} `signedSemiChannelState` created by `createSignedSemiChannelState`\n * @returns {Cell}\n */\nconst createStartUncooperativeCloseBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_start_uncooperative_close, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    cell.refs[0] = params.signedSemiChannelStateA;\n    cell.refs[1] = params.signedSemiChannelStateB;\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, signedSemiChannelStateA: Cell, signedSemiChannelStateB: Cell}} `signedSemiChannelState` created by `createSignedSemiChannelState`\n * @returns {Cell}\n */\nconst createChallengeQuarantinedStateBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_challenge_state, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    cell.refs[0] = params.signedSemiChannelStateA;\n    cell.refs[1] = params.signedSemiChannelStateB;\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, conditionalsToSettle: Cell | null}} conditionalsToSettle - dictionary with uint32 keys and values created by `createConditionalPayment`\n * @returns {Cell}\n */\nconst createSettleConditionalsBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_settle_conditionals, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    writeDict(cell, params.conditionalsToSettle); // HashmapE 32 Cell\n    return cell;\n}\n\n/**\n * @returns {Cell}\n */\nconst createFinishUncooperativeClose = () => {\n    const cell = new Cell();\n    cell.bits.writeUint(op_finish_uncooperative_close, 32); // OP\n    return cell;\n}\n\n/**\n * @param params    {{op: number, isA: boolean, signature: Uint8Array, cell: Cell}}\n * @return {Cell}\n */\nconst createOneSignature = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(params.op, 32); // OP\n    cell.bits.writeBit(params.isA);\n    writeSignature(cell, params.signature);\n    cell.writeCell(params.cell);\n    return cell;\n}\n\n/**\n * @param params    {{op: number, signatureA: Uint8Array, signatureB: Uint8Array, cell: Cell}}\n * @return {Cell}\n */\nconst createTwoSignature = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(params.op, 32); // OP\n    cell.refs[0] = createSignatureCell(params.signatureA);\n    cell.refs[1] = createSignatureCell(params.signatureB);\n    cell.writeCell(params.cell);\n    return cell;\n}\n\nmodule.exports = {\n    writePublicKey,\n    writeSignature,\n    createSignatureCell,\n    tag_init,\n    tag_cooperative_close,\n    tag_cooperative_commit,\n    tag_start_uncooperative_close,\n    tag_challenge_state,\n    tag_settle_conditionals,\n    tag_state,\n    op_top_up_balance,\n    op_init_channel,\n    op_cooperative_close,\n    op_cooperative_commit,\n    op_start_uncooperative_close,\n    op_challenge_quarantined_state,\n    op_settle_conditionals,\n    op_finish_uncooperative_close,\n    op_channel_closed,\n    createTopUpBalance,\n    createInitChannelBody,\n    createCooperativeCloseChannelBody,\n    createCooperativeCommitBody,\n    createConditionalPayment,\n    createSemiChannelBody,\n    createSemiChannelState,\n    createSignedSemiChannelState,\n    createStartUncooperativeCloseBody,\n    createChallengeQuarantinedStateBody,\n    createSettleConditionalsBody,\n    createFinishUncooperativeClose,\n    createOneSignature,\n    createTwoSignature\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}